from data_preprocessing import *
from segmentation import *
from sales_forecast import *

def advanced_visualizations(df):
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π"""
    st.subheader('üìà –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π')
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∫–ª–∞–¥–æ–∫ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π
    tab1, tab2, tab3, tab4, tab5, tab6 = st.tabs([
        '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂', 
        '–ö–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑', 
        '–ì–µ–Ω–¥–µ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑', 
        '–í—Ä–µ–º–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏–∑', 
        '–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑',
        '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏'
    ])
    
    with tab1:
        # 1. –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—â–µ–π –≤—ã—Ä—É—á–∫–∏
        col1, col2 = st.columns(2)
        
        with col1:
            # –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤—ã—Ä—É—á–∫–∏
            fig, ax = plt.subplots(figsize=(10, 6))
            df['Total'].hist(bins=30, edgecolor='black', ax=ax)
            ax.set_title('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—â–µ–π –≤—ã—Ä—É—á–∫–∏')
            ax.set_xlabel('–í—ã—Ä—É—á–∫–∞')
            ax.set_ylabel('–ß–∞—Å—Ç–æ—Ç–∞')
            st.pyplot(fig)
        
        with col2:
            # –Ø—â–∏–∫ —Å —É—Å–∞–º–∏ –¥–ª—è –≤—ã—Ä—É—á–∫–∏
            fig, ax = plt.subplots(figsize=(10, 6))
            df.boxplot(column=['Total'], ax=ax)
            ax.set_title('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã—Ä—É—á–∫–∏')
            st.pyplot(fig)
    
    with tab2:
        # 2. –ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        col1, col2 = st.columns(2)
        
        with col1:
            # –ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –ø—Ä–æ–¥–∞–∂ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            fig, ax = plt.subplots(figsize=(10, 6))
            category_sales = df.groupby('Product line')['Total'].sum()
            ax.pie(category_sales, labels=category_sales.index, autopct='%1.1f%%')
            ax.set_title('–î–æ–ª—è –ø—Ä–æ–¥–∞–∂ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º')
            st.pyplot(fig)
        
        with col2:
            # –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            fig, ax = plt.subplots(figsize=(10, 6))
            category_rating = df.groupby('Product line')['Rating'].mean()
            category_rating.plot(kind='bar', ax=ax)
            ax.set_title('–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º')
            ax.set_xticklabels(category_rating.index, rotation=45, ha='right')
            st.pyplot(fig)
    
    with tab3:
        # 3. –ì–µ–Ω–¥–µ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        col1, col2 = st.columns(2)
        
        with col1:
            # –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –ø–æ–ª—É
            fig, ax = plt.subplots(figsize=(10, 6))
            gender_sales = df.groupby('Gender')['Total'].sum()
            ax.pie(gender_sales, labels=gender_sales.index, autopct='%1.1f%%')
            ax.set_title('–î–æ–ª—è –ø—Ä–æ–¥–∞–∂ –ø–æ –ø–æ–ª—É')
            st.pyplot(fig)
        
        with col2:
            # –°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –ø–æ –ø–æ–ª—É
            fig, ax = plt.subplots(figsize=(10, 6))
            gender_avg_check = df.groupby('Gender')['Total'].mean()
            gender_avg_check.plot(kind='bar', ax=ax)
            ax.set_title('–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –ø–æ –ø–æ–ª—É')
            ax.set_xticklabels(gender_avg_check.index, rotation=45)
            st.pyplot(fig)
    
    with tab4:
        # 4. –í—Ä–µ–º–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏–∑
        col1, col2 = st.columns(2)
        
        with col1:
            # –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –º–µ—Å—è—Ü–∞–º
            fig, ax = plt.subplots(figsize=(10, 6))
            monthly_sales = df.groupby(df['Date'].dt.to_period('M'))['Total'].sum()
            monthly_sales.plot(kind='bar', ax=ax)
            ax.set_title('–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –º–µ—Å—è—Ü–∞–º')
            ax.set_xticklabels(monthly_sales.index, rotation=45, ha='right')
            st.pyplot(fig)
        
        with col2:
            # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂ –ø–æ —á–∞—Å–∞–º
            fig, ax = plt.subplots(figsize=(10, 6))
            hourly_sales = df.groupby('hour')['Total'].sum()
            hourly_sales.plot(kind='line', marker='o', ax=ax)
            ax.set_title('–ü—Ä–æ–¥–∞–∂–∏ –ø–æ —á–∞—Å–∞–º')
            ax.set_xlabel('–ß–∞—Å –¥–Ω—è')
            ax.set_ylabel('–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞')
            st.pyplot(fig)
    
    with tab5:
        # 5. –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        fig, ax = plt.subplots(figsize=(12, 8))
        correlation_columns = ['Unit price', 'Quantity', 'Total', 'Rating', 'Tax 5%', 'hour']
        correlation_matrix = df[correlation_columns].corr()
        sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', center=0, ax=ax)
        ax.set_title('–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞')
        st.pyplot(fig)
    
    with tab6:
        # 6. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ —Å Plotly
        st.subheader('–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è')
        
        # –í—ã–±–æ—Ä —Ç–∏–ø–∞ –≥—Ä–∞—Ñ–∏–∫–∞
        plot_type = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞', [
            'Scatterplot –ø—Ä–æ–¥–∞–∂',
            '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º',
            '–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏'
        ])
        
        if plot_type == 'Scatter plot –ø—Ä–æ–¥–∞–∂':
            fig = px.scatter(
                df, 
                x='Quantity', 
                y='Total', 
                color='Product line', 
                title='–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –≤—ã—Ä—É—á–∫–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤'
            )
            st.plotly_chart(fig)
        
        elif plot_type == '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º':
            fig = px.box(
                df, 
                x='Product line', 
                y='Total', 
                title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—ã—Ä—É—á–∫–∏ –ø–æ —Ç–æ–≤–∞—Ä–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º'
            )
            st.plotly_chart(fig)
        
        else:
            day_sales = df.groupby('day_of_week')['Total'].sum()
            fig = px.bar(
                x=day_sales.index, 
                y=day_sales.values, 
                title='–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏'
            )
            st.plotly_chart(fig)